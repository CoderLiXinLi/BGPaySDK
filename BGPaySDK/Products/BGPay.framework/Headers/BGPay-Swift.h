// Generated by Apple Swift version 4.1.2 (swiftlang-902.0.54 clang-902.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BGPay",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

typedef SWIFT_ENUM(NSInteger, BGErrCode) {
/// NOTE:未知错误
  BGErrCodeBGErrUnknownError = 1000,
/// NOTE:未安装BG客户端
  BGErrCodeBGErrBgNotInstalled = 1001,
/// NOTE:用户账号被禁用    请联系客服
  BGErrCodeBGErrDisableAccount = 2011,
/// NOTE:资金密码错误    请输入正确的支付密码
  BGErrCodeBGErrPasswordError = 2012,
/// NOTE:应用ID不能为空    请输入正确的appId
  BGErrCodeBGErrInvalidAppId = 2065,
/// NOTE:商户号不能为空    请输入正确的商户号
  BGErrCodeBGErrInvalidMchId = 2066,
/// NOTE:商户订单号不能为空    请输入正确的商户订单号
  BGErrCodeBGErrInvalidOutTradeNo = 2067,
/// NOTE:平台未注册    请商户前往申请此接口权限
  BGErrCodeBGErrInvalidAccount = 2068,
/// NOTE:商户号不匹配    请商户查看商户号是否正确
  BGErrCodeBGErrUnknownMchId = 2069,
/// NOTE:平台已禁用    请商户前往申请接触禁用
  BGErrCodeBGErrDisableMch = 2070,
/// NOTE:预支付订单号不存在    请输入正确的预支付订单号
  BGErrCodeBGErrUnknownPrepayId = 2073,
/// NOTE:待支付    待支付
  BGErrCodeBGErrUnPay = 2077,
/// NOTE:支付超时    支付超时
  BGErrCodeBGErrPayTimeOut = 2078,
/// NOTE:已支付完成    订单支付已完成
  BGErrCodeBGErrPaid = 2079,
/// NOTE:签名错误    请检查生成的签名
  BGErrCodeBGErrUnknownSign = 2080,
/// NOTE:用户不存在    用户未注册
  BGErrCodeBGErrNonExistUser = 2018,
/// NOTE:提现记录审核存在    提现记录已存在请联系客服审核
  BGErrCodeBGErrWithdrawRecord = 3001,
/// NOTE:提现金额需要大于0    提现金额需要大于0
  BGErrCodeBGErrUnknownFee = 3002,
/// NOTE:appId匹配错误    请检查appId
  BGErrCodeBGErrUnknownAppId = 3003,
/// NOTE:商户号匹配错误    请检查商户号
  BGErrCodeBGErrUnknownMchId2 = 3004,
/// NOTE:商户已经禁用提现    商户已经禁用提现
  BGErrCodeBGErrDisableWithdraw = 3005,
/// NOTE:提现记录不存在    请查看生成提现记录接口
  BGErrCodeBGErrNoWithdrawRecord = 3006,
/// NOTE:提现记录审核失败    等待平台审核提现记录
  BGErrCodeBGErrWithdrawRecordFailed = 3007,
/// NOTE:提现记录审核失败    提现记录审核失败
  BGErrCodeBGErrWithdrawFailed = 3008,
/// NOTE: 资金不足    请充值
  BGErrCodeBGErrNoMoney = 50027,
/// NOTE:用户尚未完成高级实名认证    请用户完成实名认证
  BGErrCodeBGErrNotAuthUser = 2000000,
};


SWIFT_CLASS("_TtC5BGPay5BGPay")
@interface BGPay : NSObject
+ (BGPay * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



@class BGWithDraw;
@class BGPayError;

@interface BGPay (SWIFT_EXTENSION(BGPay))
/// 处理钱包或者独立快捷app支付跳回商户app携带的支付结果Url
/// @param resultUrl        支付结果url
/// @param completionBlock  支付结果回调
- (void)withDrawWithOrder:(BGWithDraw * _Nonnull)item successCallback:(void (^ _Nonnull)(NSString * _Nonnull))successCallback failedCallback:(void (^ _Nonnull)(NSString * _Nonnull, BGPayError * _Nullable))failedCallback;
@end

@class BGPayOrder;

@interface BGPay (SWIFT_EXTENSION(BGPay))
- (void)setDebug;
/// 支付接口
/// @param order      订单模型
/// @param schemeStr      调用支付的app注册在info.plist中的scheme
/// @param completionBlock 支付结果回调Block
- (void)payOrderWithOrder:(BGPayOrder * _Nonnull)item scheme:(NSString * _Nonnull)formsScheme successCallback:(void (^ _Nonnull)(NSString * _Nonnull))successCallback failedCallback:(void (^ _Nonnull)(NSString * _Nonnull, BGPayError * _Nullable))failedCallback;
@end


SWIFT_CLASS("_TtC5BGPay10BGPayError")
@interface BGPayError : NSObject
@property (nonatomic) enum BGErrCode errorCode;
@property (nonatomic, copy) NSString * _Nonnull errorMessage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5BGPay10BGPayOrder")
@interface BGPayOrder : NSObject
/// NOTE:应用ID
@property (nonatomic, copy) NSString * _Nonnull appId;
/// NOTE:商户号
@property (nonatomic, copy) NSString * _Nonnull mchId;
/// NOTE:随机字符串
@property (nonatomic, copy) NSString * _Nonnull nonceStr;
/// NOTE:商户订单号
@property (nonatomic, copy) NSString * _Nonnull outTradeNo;
/// NOTE:总金额
@property (nonatomic, copy) NSString * _Nonnull totalFee;
/// NOTE:通知地址
@property (nonatomic, copy) NSString * _Nonnull notifyUrl;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC5BGPay10BGWithDraw")
@interface BGWithDraw : NSObject
/// NOTE:应用ID
@property (nonatomic, copy) NSString * _Nonnull appId;
/// NOTE:商户号
@property (nonatomic, copy) NSString * _Nonnull mchId;
/// NOTE:随机字符串
@property (nonatomic, copy) NSString * _Nonnull nonceStr;
/// NOTE:商户订单号
@property (nonatomic, copy) NSString * _Nonnull outTradeNo;
/// NOTE:手机号
@property (nonatomic, copy) NSString * _Nonnull phone;
/// NOTE:手机号 所在国家区号
@property (nonatomic, copy) NSString * _Nonnull countryCode;
/// NOTE:总金额
@property (nonatomic, copy) NSString * _Nonnull totalFee;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
